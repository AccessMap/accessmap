# The environment variables here will be passed to containers defined by the
# docker-compose YAML files. They will *not* be passed to the YAMLs themselves
# for templating - if you want that functionality, you must define a .env file.
#
# The default settings correspond to a working local development deployment
# that can be accessed at http://localhost:2015.

#
# Shared settings
#

# The host of the website (localhost or FQDN). For development mode with HTTPS
# off, specify both the protocol (http) and the port (2015). An example of this
# is below.
HOST=http://localhost:2015

#
# Caddy settings (reverse proxy)
#

# TLS setting. Set to an email address to enable SSL. Leave as "off" to disable
# TLS, something that is useful for local development.
TLS=off

# Automatically agree to ACME prompts (this is necessary for function, do not
# disable)
ACME_AGREE=true

# The URL at which the analytics server can be reached. This will be proxied to
# $(HOST)/analytics. Defaults to localhost:9999 (locally deployed with from the
# neighboring `rakam` directory. If analytics is disabled in other settings,
# this setting doesn't matter.
ANALYTICS_URL=http://localhost:9999

#
# Web app build settings
#

# Mapbox token for making use of their tile data. This must be set for the
# web app to work and has no default.
MAPBOX_TOKEN=

#
# Client-side analytics (Rakam) settings
#

# Whether or not to enable client-side analytics library that tracks user
# behavior. Defaults to 'no' because Rakam requires setting up an analytics
# project and a write key (following the README). Set to 'yes' after setting
# up Rakam if you want to use client-side analytics.
ANALYTICS=no

# The Rakam 'write key' used to send analytics data. This is defined
# per-project. See the `README.md` for more instructions.
# ANALYTICS_KEY=

#
# `accessmap-api` settings: user logins and profile saving.
#

# Secret used for `accessmap-api` instance. Can be anything, but would ideally
# be a secure hashing algorithm result.
# IMPORTANT: do not leave this as the default setting in production
# environments.
SECRET_KEY=dummy_key

# Secret used for `accessmap-api` JWT generation. Can be anything, but would
# ideally be a sure hashing algorithm result.
# IMPORTANT: do not leave this as the default setting in production
# environments.
JWT_SECRET_KEY=dummy_key2

# The URI for OpenStreetMap. For most stages of deployment, the OpenStreetMap
# testing website should be used: https://master.apis.dev.openstreetmap.org/.
# The production environment may be set to https://api.openstreetmap.org for
# the main OpenStreetMap servers or to any self-hosted deployment of the
# OpenStreetMap website.
OSM_URI=https://master.apis.dev.openstreetmap.org/

# Per-application OAuth 1.0a client id set up at the OSM_URI endpoint. This
# should be copied from the OAuth section of an OpenStreetMap account that you
# control.
OSM_CLIENT_ID=

# Per-application OAuth 1.0a client secret set up at the OSM_URI endpoint. This
# should be copied from the OAuth section of an OpenStreetMap account that you
# control.
OSM_CLIENT_SECRET=

# Per-application OAuth 1.0a callback URI: after logging in, this is where
# OpenStreetMap will redirect, sending auth tokens. This should be set to
# $HOST/login_callback.
OSM_CONSUMER_CALLBACK_URI=http://localhost:2015/login_callback

# URI where the API database can be found. In development, this is
# automatically set to a docker-hosted postgres database. In staging or
# production, you may want to set this to a dedicated postgres server (with
# backups, etc). The default value creates a temporary SQLite database within
# the container.
SQLALCHEMY_DATABASE_URI=sqlite:////tmp/accessmap-api.db
